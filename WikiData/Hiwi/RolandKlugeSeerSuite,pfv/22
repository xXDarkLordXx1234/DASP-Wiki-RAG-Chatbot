%META:TOPICINFO{author="kluge" comment="reprev" date="1361348114" format="1.1" reprev="22" version="22"}%
%META:TOPICPARENT{name="RolandKluge"}%
%TOC%

---++ Seersuite Showcase

*Seersuite with all features is running [[http://seersuite.ukp.informatik.tu-darmstadt.de:9080/seersuite/index][here]]*

---++ Eclipse Tools

   * Eclipse version: 3.7.2 (Indigo, 64 bit for Linux)
   * Eclipse version 4.2 (Juno, 64 bit for Linux) also works fine
      * JDK 1.6v21
      * standard components as described in DKPro setup (DKPro.HowToMaven)
      * site: http://download.eclipse.org/releases/indigo
         * Web, XML, Java EE and OSGi Enterprise Development	
            *  Eclipse Java EE Developer Tools 3.3.2.v201111030500-7b7II1YFSK2WIuPRDEnExPV-RvTn
            *  Eclipse Java Web Developer Tools 3.3.2.v201112072049-7F7AFO7C25ToiIbpoiuW12GT78Mciy6W7iwuxaco
            *  Eclipse Web Developer Tools 3.3.2.v201111030500-7O7IFj6EMjB7yO1Xs_G1kMtQeOye6HTXFWve95_R
            *  JST Server Adapters 3.2.100.v20110303-208Z7w31211419
            *  JST Server Adapters Extensions	3.3.2.v20111010_1242-777HFHzCcNBDjCbIUfEEE3

Sanity Check: You need to be able to:
   * create a *Dynamic Web Project* (File -> New -> Project -> Web -> Dynamic Web Project)
   * create a *Tomcat 7.0* or *Tomcat 6.0* server instance
      * Open *Servers* View: _Window -> Show View -> Other... -> Server -> Servers_
      * Inside the view select *new server wizard*
      * Select either *Apache -> Tomcat v6.0 Server* or *Apache -> Tomcat v7.0 Server* depending on your version
      * Proceed with *Next*
      * Configure *Name* and *Tomcat installation directory* , i.e., the folder containing Tomcat's _conf_, _log_, etc. directories
      * You may add your sample web application in the next step.

---++ Troubleshooting

---+++ Troubleshooting Axis2

   * *Problem*: 'Name jdbc is not bound in this Context' and Cannot create JDBC driver of class '' for connect URL 'null'
      *  *Solution*: Seems to be better to place resource declarations in /var/lib/tomcat6/conf/Catalina/localhost/axis2.xml because using conf/server.xml requires a restart of Tomcat after every change! (see [http://tomcat.apache.org/tomcat-6.0-doc/config/context.html])
      *  Solved by adding a resource-ref to web.xml, see [[http://tomcat.apache.org/tomcat-6.0-doc/jndi-datasource-examples-howto.html][Tomcat JNDI Example]] and<br/><verbatim>
<resource-ref>
    <description>DB Connection</description>
    <res-ref-name>jdbc/DOIDB</res-ref-name>
    <res-type>javax.sql.DataSource</res-type>
    <res-auth>Container</res-auth>
</resource-ref>
</verbatim>

---+++ Troubleshooting Ingestion

<nop>FileConverter
   * *Problem* Can't locate Digest/SHA1.pm (Ubuntu: [[https://bugs.launchpad.net/ubuntu/+source/libdigest-sha1-perl/+bug/993648]])
      * *Solution*: rename Digest::SHA1 to Digest::SHA at lines 20 and 64 in citeseerx/dist/services/FileConversionService/lib/FileConverter/CheckSum.pm
      * *Solution* (quick and dirty): install required package manually [[http://launchpadlibrarian.net/85191944/libdigest-sha1-perl_2.13-2build2_amd64.deb]]
   * *Problem* java.lang.NoClassDefFoundError: org/pdfbox/ExtractText
      * *Solution*: you must use exactly the given libs (citeseerx/trunk/lib/PDFBox...) as the newer versions of PDFBox have moved to Apache and are sorted into a different package structure

<nop>ParsCit

   * *Problem* Starting ParsCit Webservice: =perl parscit-service.pl=  yields =Too late for "-CSD" option at parscit-service.pl line 1.=
      * *Solution*: Call script with -CSD option: =perl -CSD citeExtract.pl <textfile>=
   

---+++ Troubleshooting CiteseerX workspace
   
   * *Problem*: org.apache.jasper.JasperException: /WEB-INF/jsp/csx/searchDocs.jsp (line: 87, column: 22) "${ ! empty hit.abstract }" contains invalid expression(s): javax.el.ELException: Failed to parse the expression [${ ! empty hit.abstract }]
      * *Solution 1* (easy): Add JVM parameter in Launch Configuration of Tomcat 7.0: '-Dorg.apache.el.parser.SKIP_IDENTIFIER_CHECK=true' (confirmed to work for me)
      * *Solution 2* (tedious): Change all occurrences of 'hit.abstract' to 'hit[abstract]' (not tried yet)
      * _Source_ : http://thinkinginsoftware.blogspot.de/2011/10/tomcat-7-jstl-failed-to-parse.html
   * *Problem*: java.io.FileNotFoundException: /s21/studium/ukp/download/apache-tomcat-7.0.27/webapps/citeseerx/WEB-INF/stats/articles (No such file or directory) _when calling_ http://localhost:8080/citeseerx/stats/articles
      * *Solution* statistics may be generated by calling 'bin/genStats', afterwards copy the new directory 'bin/stat' to the WEB-INF directory of the citeseerx webapp
   * *Problem*: java.lang.OutOfMemoryError: PermGen space _when_ redeploying
      *  *Solution* -XX:+CMSClassUnloadingEnabled -XX:+CMSPermGenSweepingEnabled or -XX:MaxPermSize=128M 
      *  *Source* http://stackoverflow.com/questions/88235/dealing-with-java-lang-outofmemoryerror-permgen-space-error
   * *Problem* with nested JSPs?
      * "account cannot be resolved" in _citeseerx/web/citeseerx_webapp/WEB-INF/jsp/shared_
      * "account cannot be resolved to a variable"
      * "mscConfig cannot be resolved"
      * *Solution* (quick and dirty): Disable Validation (*Project Properties -> Validation -> Disable All*)
   * *Problem*: Access restriction: The method createJPEGEncoder(OutputStream) from the type JPEGCodec is not accessible due to restriction on required library /usr/lib/jvm/java-6-sun-1.6.0.24/jre/lib/rt.jar
      * Make Eclipse more lenient: Preferences -> Errors/Warnings -> Deprecated and restricted API -> change to "Warning" for "Forbidden reference(access rules)"
      * [[http://notepad2.blogspot.de/2011/05/eclipse-access-restriction-method.html][Source]]

---+++ Importing a new repository

If we intend to replace our repository with a foreign one, the following steps need to be taken:

   1 *Export the database* on the *source host*<br> <verbatim>mysqldump --opt --user=csx-devel --password=csx-devel --databases citeseerx csx_citegraph csx_external_metadata csxdoi myciteseerx | gzip -c >citeseerx_database_dump.sql.gz</verbatim>
      * This function is provided by the script =<svn_root>/seersuite/src/scripts/dump_databases.sh=
   1 *Import the database* on the *target host*
   <br><verbatim>mysql --user=root --password=<root-password> -e "source citeseerx_database_dump.sql.gz"</verbatim>
      * If you do not trust the script and would like to create the databases on your own, you will need to create the following databases:
         * citeseerx
         * csx_citegraph
         * csx_external_metadata
         * csxdoi
         * myciteseerx
   1 *Create user* _csx-devel_ with password _csx-devel_ and GRANT ALL to csx-devel on the databases
   1 *Export the PDF documents* on the *source host*, e.g. in order to export repository _rep1_: <verbatim>tar -czf /tmp/rep1.tar.gz rep1/</verbatim>
   1 *Import the PDF documents* on the *target host* ( *Mind to make a backup of the original rep1, if exists!!!*)
   <br> <verbatim>tar -xzf /tmp/rep1.tar.gz</verbatim>
   1 *Update Solr indices*
      * You may either update the Solr indices automatically using the scripts provided by Seersuite
      <br> <verbatim>seersuite/bin/updateIndex</verbatim>
      * (Problem: this also overwrites or you may export the directory containing the solr instances on the *source host*
      <br> <verbatim> tar -czf /tmp/solr_instances.tar.gz</verbatim>
      <br> and unpack them on the *target host* (*Mind to make a backup of the original solr directory, if exists!!!*)
      <br> <verbatim> tar -xzf /tmp/solr_instances.tar.gz</verbatim>
      * *Note:* If you encounter the following stack trace, you have also copied the write locks (*write.lock*) of the Solr repositories which are located inside the *data/index* folder of each Solr instance. *You may remove the lock* (for the sake of security, shut down the Tomcat server hosting the Solr instances before doing so)<verbatim>
SEVERE: java.lang.RuntimeException: org.apache.lucene.store.LockObtainFailedException: Index locked for write for core 
        at org.apache.solr.core.SolrCore.initIndex(SolrCore.java:403)
        at org.apache.solr.core.SolrCore.<init>(SolrCore.java:552)
        [...]
SEVERE: Could not start Solr. Check solr/home property and the logs
org.apache.solr.common.SolrException: No cores were created, please check the logs for errors
        at org.apache.solr.core.CoreContainer$Initializer.initialize(CoreContainer.java:172)
        at org.apache.solr.servlet.SolrDispatchFilter.init(SolrDispatchFilter.java:96)
        [...]
SEVERE: org.apache.solr.common.SolrException: No cores were created, please check the logs for errors
        at org.apache.solr.core.CoreContainer$Initializer.initialize(CoreContainer.java:172)
        at org.apache.solr.servlet.SolrDispatchFilter.init(SolrDispatchFilter.java:96)
        [...]</verbatim>

---+++ Additinonal DIPF Berlin

   1 remove jcaptcha and kaptcha 2.0 -> go to kaptcha
   1 TODO adapt host-manager.xml and manager.xml -> no /usr/... (script)
   1 TODO tar.gz from exported libraries
   1 TODO copy csx.properties to /WEB-INF/classes
   1 TODO strip away DKPro stuff
   1 TODO make both tomcat servers startable from Eclipse

---++ Installing/Deploying citeseerx.jar via Ant

We need the Maven Ant Tasks (installation: [[http://maven.apache.org/ant-tasks/installation.html]]) which allow us to add maven goals to the build.xml file:

   1 Download _maven-ant-tasks-2.1.3.jar_ into the _lib_ directory of the seersuite workspace: =cd ./lib; wget <nop>http://www.apache.org/dyn/closer.cgi/maven/binaries/maven-ant-tasks-2.1.3.jar=
   1 Modify build.xml
   <br><verbatim>
<project name="CiteSeerX" default="dist" basedir="."
    xmlns:artifact="antlib:org.apache.maven.artifact.ant">
[other targets ....]
<path id="maven-ant-tasks.classpath" path="lib/maven-ant-tasks-2.1.3.jar" />
<typedef resource="org/apache/maven/artifact/ant/antlib.xml"
    uri="antlib:org.apache.maven.artifact.ant"
    classpathref="maven-ant-tasks.classpath" />
<target name="to-maven-repo" depends="dist">
    <artifact:pom id="citeseerx-pom" file="pom.xml"/>
        <artifact:install file="dist/lib/citeseerx.jar">
    <pom refid="citeseerx-pom"/>
    </artifact:install>
</target>
    </verbatim>
   1 Create minimal _pom.xml_
   <br><verbatim>
<project xmlns="http://maven.apache.org/POM/4.0.0" 
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>citeseerx</groupId>
    <artifactId>citeseerx</artifactId>
    <version>0.0.1-SNAPSHOT</version>
</project>
</verbatim>
   1 Calling =ant to-maven-repo= will install the up-to-date jar file into your local maven repository.

---++ How to communicate information between JSP and Java
(By example: text input for abstract query in Advanced Search)
<verbatim>
<spring:bind path="advancedSearch.abstractQuery">
    <tr>
    <td>
        <label 
            for="<c:out value="${ status.expression }"/>" 
            class="prefield">Abstract:&nbsp;
        </label>
    </td>
    <td>
        <input 
            name="<c:out value="${ status.expression }"/>" 
            id="<c:out value="${ status.expression }"/>" 
            value="<c:out value="${status.value}"/>" 
            type="text" 
            size="43"/>
     </td>
     </tr>
</spring:bind>
</verbatim>

   * The =spring:bind= tag declares that we intend to access the property =abstractQuery= of the =advancedSearch= bean.
   * Inside the =spring:bind= tag we may 
      * retrieve the current value of the proptery by calling =status.value=
      * get the name of the property by calling =status.expression=
      * get potential errors by calling =status.errorMessages=
   * For more information: [[http://static.springsource.org/spring/docs/1.1.5/taglib/tag/BindTag.html][Spring 1.1.5 Taglib Reference]]

When introducing a new property =fooProp= into =AdvancedSearch=, we need to

   * create a new instance variable: =private String fooProp;=
   * provide getter and setter: 
      * =public String getFooProp(){return this.fooProp;}=
      * =public void setFooProp(final String fooProp) {this.fooProp = fooProp;}=

---++ Transition to Solr/Lucene 4.1.0

   * *Update index* If we already have an index (located in the _solr/data/index_ directory) we need to update the index as follows:
      * Download Lucene 4.1.0 from [[http://lucene.apache.org/core/]]
      * Make a backup of the old index
      * Run the following command: =java -cp <path_to_lucene_core_4_1_0.jar> org.apache.lucene.index.IndexUpgrader -verbose <path_to_index_directory>=
   * *Get Solr*: 
      * Download Solr 4.1.0 from [[http://lucene.apache.org/solr/]]. 
      * Replace the file _solr.war_ in the _solr_ directory with the WAR file you find in the _dist_ subdirectory of the downloaded archive
   * *Collections*: 
      * Create directory _solr/collection1_: The newer version of Solr uses collections. The default collection is called "collection1" and resides below the _solr_ directory
      * Copy the _solr/conf_ and _solr/data_ directories to _solr/collection1_
   * *Update solrconfig.xml* (_collection1/conf/solrconfig.xml_)
      * Take all elements which reside in the *&lt;indexDefaults&gt;* and *&lt;mainIndex&gt;* sections and collect them below a newly created <indexConfig> element.
      * Replace all occurrences of *solr.DisMaxRequestHandler* with =solr.StandardRequestHandler=. The "DisMax" functionality is now provided via a query type option.
      * Comment out or remove the queryResponseWriter of type *XSLTResponseWriter* as it is not used.
   * *Update schema.xml* (_collection1/conf/schemaxml_)
      * Replace all occurrences of<br/>&lt;filter class="solr.*ASCIIFoldingFilterFactory*"/&gt;<br/> with <br/> &lt;filter class="solr.ISOLatin1AccentFilterFactory"/&gt;
      * Replace all occurrences of<br/>&lt;filter class="solr.*EnglishPorterFilterFactory*" protected="protwords.txt"/&gt;<br/> with<br/> &lt;filter class="solr.LowerCaseFilterFactory"/&gt;

---+++ Links

   * [[http://citeseerx.ist.psu.edu/index][CiteSeerx@PSU]]
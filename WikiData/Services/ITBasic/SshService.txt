%META:TOPICINFO{author="alles" comment="" date="1727883180" format="1.1" reprev="22" version="22"}%
%META:TOPICPARENT{name="Resources"}%
<div style="float:right; background-color:white; z-index:999; border: solid 2px lightblue; padding: 5px">
---++++ !! Content of this page
%TOC%
</div>

---++ SSH Service
---+++ Logging in
   * If you received a VM from UKP system-admin you can access it using SSH with your UKP Lab account like =ssh username@$VMNAME= or =ssh username@$VM-IP= 
   * You can also setup passwordless login with ssh keys if you'd like to. 
---+++ Terms of Use / Reachability
   * The SSH port is *not public reachable*, only within the UKP Lab network (also from UKP VPN). 
   * If you need it to be open e.g. from TU Darmstadt network (so students using eduroam and the HRZ VPN can use it), you need to take care of the security of your VM by yourself.
   * We won't open any SSH port public to the WWW. 

---++ Common issues
---+++ Server not reachable
   * see Terms of Use / Reachability above! 
---+++ SSH returns "corrupted MAC on input"
   * mostly happens for windows users
   * you can create a file =C:\Users\$YOURUSERNAME\.ssh\config= with the following content options to make the message go away
      * Option A) <verbatim>Host *
  MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com</verbatim> to allow matching MACs *OR*
      * Option B) <verbatim>Host *
  Ciphers aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr</verbatim> to allow additional Ciphers
   * instead of =*= you can also specify a single IP address (like =130.83.167.1=) or FQDN (like =vmname.ukp.informatik.tu-darmstadt.de=) of the server you are trying connecting to with your ssh command.

---++ Tips

%TABPANE%
 %TAB{"Warning"}%

*%RED% Please Note - the following hints and remarks are dated back to 2019. They may not apply anymore, but we keep it here in case someones stills needs it. %ENDCOLOR%*

 %ENDTAB%
 %TAB{"Unfold old instructions and tips"}%

---+++ Forwarding connections

   * If you need to copy data from outside UKP (e.g. your private laptop at home) to e.g. a compute server via SSH, you should do so via a SSH port forwarding:
      * Set up forwarding connection in one terminal. This example will create forwarding from port 2222 on your machine to port 22 on projectvm:
         * =ssh -L 2222:projectvm.ukp.informatik.tu-darmstadt.de:22 headnode.ukp.informatik.tu-darmstadt=
      * Copy data in another terminal. This will use the port forwarding set up above to copy =myfile.txt= to your home directory on selma.
         * =scp -P 2222 myfile.txt myukpusername@localhost:~/=
   * Such forwardings only work for your machine, so you do not have to be afraid that somebody else in your network might hijack your port forwarding.
   * As it is likely that your UKP username is different from your username on whatever machine your are on outside UKP, make sure you always use the "username@host" notation as in the example above.
   * This also works with rsync: =rsync -e 'ssh -p 2222' myfile.txt myukpusername@localhost:~/=

---++++ Automatically forwarding connections (transparent multi-hop ssh)
   * To transparently construct connects through multiple ssh tunnel, you can specify the following in =.ssh/config=
<verbatim>
Host DestinationHostName
	ProxyCommand ssh username@GatewayHostName nc %h %p
</verbatim>
   * This allows transparent connection to the DestinationHostName through the gateway computer
   * Setup example
<verbatim>
Host desktop-152.ukp.informatik.tu-darmstadt.de
	ProxyCommand ssh user@server.ukp.informatik.tu-darmstadt.de nc %h %p
</verbatim>
   * Connection example
<verbatim>
ssh user@workstation.ukp.infomatik.tu-darmstadt.de
</verbatim>
   * If you have the normal pass phrase login, then the above connection asks for two passwords: first one to login to the gateway and another one to login to the destination computer.
   * The advantage of this is that the tunneling is transparent to user and system (i.e. you may forget about the intermediate hops altogether), and use other services as usual.
      * ssh
      * scp
      * X forwarding: ssh -X
      * rsync
      * sftp
      * etc.

---++++ Web proxy over ssh
   * Sometimes you may want to create a web proxy to a remote network
      * i.e. from home, you want to have access to journals that TU has subscription to, which needs connection from one of the university IP addresses
   * 1) Create a SOCKS proxy using the ssh's dynamic port forwarding capability
<verbatim>
ssh -C2qTnN -D 8080 projectvm.ukp.informatik.tu-darmstadt.de
</verbatim>
   * 2) Configure your web browser to use a manually configured proxy 
      * In firefox,
         *  Edit -> Preferences -> Advanced -> Network -> Connection/settings -> Manual proxy configuration:
            * SOCKS host: localhost
            * Port: 8080
            * SOCKS v5
         * or you can use a proxy plugin such as http://getfoxyproxy.org/ for easy management of proxies
   * 3) Check whether that you get the remote server's ip from http://www.whatismyip.com/

---+++ Passwordless login

If you want to login on a compute server, you always have to type your password. This prevents from using scripts, e.g. to copy a updated version of your source tree to your compute server's home directory.

Fortunately, there is a workaround.

Just copy the public key file (should be in ~/.ssh, otherwise ) to your computer server's home directory (directory =.ssh= has to exist in your home).
<verbatim>
scp id_rsa.pub user@projectvm.tk.informatik.tu-darmstadt.de:.ssh/authorized_keys
</verbatim>
(Note, that authorized_keys2 will be overwritten by this command. If you have already installed other keys, you have to add the new key to the file. )

Afterwards you can login without the need for typing in your password.

If there is no public key file, generate a new keypair with =ssh-keygen -t rsa= answer all questions by typing the RETURN key. Don't enter a passphrase.

---+++ Forwarding X connections

Remote X Window System connections can be somewhat slow.  If you want to run graphical programs on your desktop machine over SSH, consider using [[https://en.wikipedia.org/wiki/NX_technology][NX]]:
   1 Install an NX server (such as [[http://wiki.x2go.org/doku.php/start][X2Go]] or [[http://www.nomachine.com/select-package.php?os=linux&id=1][NoMachine NX Free Edition]]) on your desktop machine.
   1 Install an NX client (such as [[http://wiki.x2go.org/doku.php/start][X2Go]] or [[http://www.nomachine.com/download.php][NoMachine NX client]]) on your remote machine.  (Clients are available for many different operating systems.)
   1 Configure the NX client to your liking.  You can have it launch an entirely new desktop session in a dedicated window (sort of like running a virtual machine) or you can have it just launch a single command, such as an xterm, in "headless" mode.  In this mode the program windows will appear just like those for programs running locally.
   1 Initiate a [[Services/ITBasic.VpnService][VPN connection]] from the client machine to the UKP network (or alternatively, set up a tunnel through the headnode as instructed above).
   1 Run the NX client and have it initiate a connection to your desktop machine.

Another alternative is [[https://en.wikipedia.org/wiki/VNC][VNC]], though it isn't as fast and flexible as NX.

Note that there's a bug in Eclipse Juno which causes it to crash when used over NX.  Fortunately there is [[DKPro/DevelopmentKnownIssues#Eclipse_crashes_when_you_open_a][a simple workaround]].

 %ENDTAB%
%ENDTABPANE%
%META:TOPICMOVED{by="alles" date="1727883180" from="UKP.SshService" to="Services/ITBasic.SshService"}%

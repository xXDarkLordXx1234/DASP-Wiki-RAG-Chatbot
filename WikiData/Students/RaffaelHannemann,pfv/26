%META:TOPICINFO{author="hannemann" comment="reprev" date="1422312858" format="1.1" reprev="24" version="26"}%
%META:TOPICPARENT{name="WebHome"}%

---+++ 2015-01-27 (meeting: CS, IH, RH)

   * Status Report (RH): What have I done?
      * Continued working on the implementation: still focusing on client-side, made good progress again
      * Started working on server-side: consists mainly on writing custom plug-ins for BaasBox ("Backend as a service")
      * Deploying the client-side to http://arguegame.raffael.me every once in a while (warning: buggy, incomplete, dummy data)
   * @discuss(CS,IH,HR)
      * 
      * 
---+++ 2015-01-20 (meeting: CS, IH, RH)

   * Status Report (RH): What have I done?
      * Continued working on the implementation: One level + one bonus level
      * Focusing on client-side currently
      * Made good progress
   * @discuss(CS,IH,HR)
      * 
 
---+++ 2015-01-14 (meeting: CS, IH, RH)

   * In this meeting (4 hours) we discussed the elements of the game, and the game mechanics in detail.
   * Terminology:
      * Coins: As a reward for playing the game and generating data, users are rewarded with coins, which act as a virtual currency
      * Rounds: The mini games which represent one particular task for the user to generate an input, e.g., to compose and argument, or to assess an existing argument. Finishing rounds is being rewarded with coins. A round can forward its input to the next round, if, e.g, the next round further processes this input-
      * Levels: A level consists of multiple rounds in a row, which need to be played (or skipped) in order to complete the level
      * Worlds: A world is a list of levels.
      * High-Score: The High-Score lists the players who have earned the most coins at the top.
      * (Other less important Entities)
   
   * Comparison: Initial game idea (RH) and improved game idea (CS, IH, RH):
      * Initial Game Idea proposed by RH:
         * Users can earn both Coins and Bricks while playing the game
         * They'll receive coins for every action which is valuable for the generation of data.
         * user with the most coins = High-score leader
         * Bricks, an additional type of reward, act as a rewarding for completing special rounds, or rounds which are way more complex than others.
         * Bricks have a certain label, e.g., "Tech", or "Composer", depending on the action of the users which they have earned it for. And o
         * Over time, the users may have collected a bunch of bricks, which then can be exchanged into coins anytime, based on a dynamic exchange rate.
         * This rate is a function f: BrickLabels -> Int, which is determined automatically by the system to govern the creation of data: E.g., if there are way too few arguments being composed currently, the exchange rate for the "Composer" bricks is extremely high, and thus, users will be motivated even more to choose rounds in which they can compose arguments in future.
         * Users may defer the exchange in order to wait for better exchange rates, and thus, are motivated to back to the app every once in a while to check the current rates.
         * After exchanging bricks, the users will see the impact of their 'new richness of coins' when they see how much they improved in the high-score
         * --
         * There will be levels which you can play again and again to improve ranking and receive bricks
         * For reaching sub-goals (e.g., being in the Top Ten), the users receive Badges.
         * There is only a constrained list of available badges, and it's a sub-goal of the game to get all badges
         * Optional: time-constrained rounds with a countdown / progress bar on top of the screen to build up some pressure / sporty character
      
      * Improved idea: We start with a simplified version 0, which implements:
         * World = One level with multiple rounds
         * Fixed amount of coins per type of round (e.g., 25 Coins for each composed argument)
         * Five round types:
            * Identify the Claim (/Premise): Clicking the component highlights / unhighlights the component. Premises: multiple selection. Provides immediate feedback after submission (solution).
            * Is this a Pro (/Contra) argument? Only one premise is visible. Immediate feedback after submission.
            * Compose an argument! Based on a given Topic ('Steady economical growth is required for the well-being of the population of a country. Do you think steady growth should be the ultimate goal?') in a certain category ('Economics'), the user can provide an argument via a re-orderable template based form: field for Claim, Premise (called *Reason*), Add Reason button, (optional: Add URL button), Before the final submission, the users are asked if they would like to re-order the fields in order to make it sound more natural. Note: The topic must be editorially composed very carefully. It should a) be motivating enough to state the position, but also b) not be an argument / statement on its own. Otherwise, the composed argument can only be evaluated with regards to this topic, instead of being evaluated isolate (Problem: double negation: Topic = 'Pegida is stupid!'. A Contra argument is at the end PRO Pegida).
            * Attack an argument: Based on a given argument (or only one premise of it) of someone else, compose an argument (same input mechanics as above).
            * Assess the Relevance (/Sufficiency) (/Acceptance) of this component in this argument! User needs to assess the quality of the overall argument by assessing a particular property of the argument. (Since otherwise, if we'd simply ask 'is this a good argument', too many interpretations of 'good' exist). Relevance: Is this reason relevant for the claim of the argument? Sufficiency: Are these reasons sufficient to support the claim? Acceptance: Is this a valid, true reason for the claim?
         * We need to always measure the time required per round per user to a) get this valuable meta-data and to b) detect cheaters
         * the types of rounds and which round follows is determined by a simple algorithm ('controller' object, with a certain interface, that can be easily replaced)
         * Rounds are skippable (at least at a later stage of the game progress), but it costs an amount of coins. Since users might always skip Composing rounds, we need a motivation for these less attractive rounds:
         * Additional Bonus level where the user can earn much more coins for certain types of rounds. The boni depend on the current balance of the generated data, and the need for particular types of data, e.g., newly composed arguments.
         
---+++ 2015-01-13 (meeting)

   * Status Report (RH): What have I done?
      * Worked on terminology to facilitate future discussions.
      * Worked on the game mechanics and the game play. Keywords: coins, bricks, exchange rate.
      * Prepared meeting on Wednesday for a game-walkthrough to discuss the game play in detail and find pitfalls.

---+++ 2015-01-06 (meeting)

   * Status Report (RH): What have I done?
      * Extended the game architecture to allow a sort of game configuration file, that specifies the rounds, levels, etc.
      * Struggled with AngularJS, JavaScript and OOP programming here
   * @discuss(CS,IH,HR)
      * planned a walk-through / gaming session on 2015-01-12 to test the gaming concepts and the model

---+++ 2014-12-16 (meeting)

   * Status Report (RH): What have I done?
      * Mid-term talk: presentation of the research question and my attempt to solve it
      * Registered the thesis in the student office. Official start: Nov 1st, until May 5th.
   * @discuss()
      * Next steps: Developing the game mechanics
      * Feedback after Mid-term presentation from the UKP group:
         * 'Becoming a better Arguer' may be not ideal, suggestion: 'Be closer to the current news and debating topics'. [Comment: Good point! Being informed may be an even better motivation compared to the 'You can learn!' aspect]
         * I should get rid of argumentation domain terminology, such as 'Claim', 'Premise', etc., and use more simple words instead [Comment: Yes, the final app will definitely use better expressions]
         * I should provide a model of the ideal argument which the group should compose in the ArgCollect app [Comment: Will do!]
      * Ideas emerging from the discussion (CS, IH, RH):
         * Highscores, and local Highscores
         * Maybe allow free text arguments to also collect 'natural' arguments, that do not fit into the template. But: we have tons of free text arguments coming from the existing debating platforms
         * Earn badges: "You're head of the 'Tech' category!"
         * *Fixed the set of sub-games* ["Rounds"]:
            * What is the stance of this argument? [Pro, Contra]
            * Can you identify the [ComponentType] component here?
            * Is this component here the [ComponentType]?
            * Is this one here a good argument [Here, we're not differentiating between 'is argument' and 'isn't an argument', but we're assessing the quality of it.]
            * Compose an argument! [optionally: with free text, instead of template]
            * optionally: some very lightweight unrelated HTML5 based mini-games between the rounds to let them have even more fun
            * *Open Questions*:
               * Assessing arguments still a little bit blurry / unclear
               * Social Media integration
               * Grading of users
            * Conclusion:
               * We need a walkthrough session
           
   * @info() examples of arguments on the website
      * when ready, we can send around an email to the UKP group as a gentle reminder to participate
   * @discuss() scoring, top-user list

---+++ 2014-12-09

   * Status Report (RH): What have I done?
      * , due to medical absence
   * Status Report(RH): What will I do?
      * prepare Midterm presentation
      * register thesis at student office
   * Status Report(RH): What's in your way?
      * 

---+++ 2014-12-02

   * Status Report (RH): What have I done?
      * Continuing reading/writing (Related Work)
   * Status Report(RH): What will I do?
      * will be offline for medical reasons
      * Continuing writing
      * will take care of thesis registration in office
   * Status Report(RH): What's in your way?
      * &#8212;&#8212;

---+++ 2014-11-25

   * Status Report (RH): What have I done?
      * Continuing reading/writing (Related Work)
   * Status Report(RH): What will I do?
      * Continuing writing
   * Status Report(RH): What's in your way?
      * Profoundly present the basics of Argumentation Theory and Mining need far more time than expected
   * @discuss(CS,IH): Study of fallacies: Currently, fallacies are not part of the product. How much of the fallacy topic is expected in Related Work? There are other topics such as Informal Logic and Pragma-Dialectics, which I only explain in one sentence currently + adding a literature reference. I'd mention fallacies here as well, unless you'd like to see more here? 

---+++ 2014-11-18

   * Status Report (RH): What have I done?
      * Improved font sizes on smaller smartphones on http://thesis.raffael.me/ArgCollect (might require re-adding the app onto the homescreen)
      * Continuing writing
   * Status Report(RH): What will I do?
      * Continuing writing
   * Status Report(RH): What's in your way?
      * Still waiting for a meeting with Serious Games group (Prof. Gurevych is in contact with Dr. Goebel)
   * @discuss(): Anmeldung - in progress, waiting for Prüfungsplan

---+++ 2014-11-11

   * Status Report (RH): What have I done?
      * Further improved the 'ArgCollect' tool with new functions as discussed: Visit http://thesis.raffael.me/ArgCollect and start composing arguments!
      * (added argument listing, bug fixes, choosing the stance in the input form)
      * Proposing a structure for the thesis
   * Status Report(RH): What will I do?
      * @discuss(CS,IH): Proposed thesis structure
   * Status Report(RH): What's in your way?
      * &#8212;

---+++ 2014-11-04
   
   * Status Report (RH): What have I done?
      * Developed a formal model for the arguments which will be used in the thesis
      * Developed a quick Argument Composing tool: http://thesis.raffael.me/ArgCollect
        which allows visitors to compose arguments for various categories, that can be used for the bootstrapping
        of the final thesis product. The app works best on mobile devices (add it to your homescreen on smartphones and tables), but on Desktop
        as well. Built using Angular.js and the Ionic Framework
   * Status Report(RH): What will I do?
      * Start writing the Related Work section
   * Status Report(RH): What's in your way?
      * &#8212;


---+++ 2014-10-29
   * Idea (emerged in the group meeting): Quickly build a tool to let group participants compose arguments (template based) from the very beginning

---+++ 2014-10-28 Meeting (IH)

   * @info(IH) deadline for related work and introduction - end of November
   * @info(RH) SVN repo and latex template set-up

---+++ 2014-10-23 Meeting (IH)

   * @info(RH) back-end technology
      * baasbox - http://www.baasbox.com/
         * now runs locally, JSON based database
         * maybe won't be enough - can't query the database; they use more abstract layer for their API
         * but in general it should work well
   * current prototype application
      * basic functionality, UI concepts (screens, etc.)
      * looks good
   * UI and the game logic - in JavaScript MVC framework AngularJS http://angularjs.org
   * @info(IH) thesis writing
      * recommended writing the related work section right from the beginning (putting notes, literature overview)
   * @action(RH) start using our SVN repository for both latex + code
   * @action(RH) Prüfungssekretaraiat - should do ASAP
   * @action(RH) game concept
      * needs to develop precisely, as a graph or some other abstract representation
      * we can then play the game on paper and see how it works
   * @discuss(RH) Concerns - meetings
      * should be weekly, can be another weekday if Tuesday not possible
   * @info(IH) Questions in the game - take from the slides (Google doc.)
   * @discuss(RH) We need a graphic designer for comics, etc.
      * IH: not the main focus on the beginning, but at the later stages we can try to find resources for that
   * @action(IH) send RH link to the serious games from Roberto Navigli
      * http://www.knowledgeforge.org/game/infection/
   * @info(IH) Informed about midterm talk on 2014-12-16 (9:50, S2|02, C110)
   * @discuss() Another game idea might be to really let the experienced users to annotate parts of the text (challenging game)
      * @action(RH) formulate the concept and put into the context of other game scenarios

---+++ 2014-10-21
   * Status Report (RH): What have I done?
      * Further dived into the frameworks
      * Working on a first prototype ("Durchstich")
   * Status Report(RH): What will I do?
      * Continuing working on the prototype
      * Continuing reading papers
   * Status Report(RH): What's in your way?
      * Currently everything is fine.
   * @todo(Raffael):
      * sign task description
      * Prüfungssekretariat

---+++ 2014-10-14
   * Status Report (RH): What have I done?
      * continuing reading the papers
      * selected the set of frameworks / technologies to be used in the system:
         * Client:
            * The apps will be built with HTML5 to have a cross-platform compatible solution
            * Therefore, AngularJS (http://angularjs.org, by Google) will be used
         * Server
            * A Backend-as-a-service (baas) will be used, which already provides all sorts of user management, Facebook / Twitter APIs, asset management, etc.
            * parse.com is a great baas, and would *highly* accelerate the development. But it's free only up to a threshold
            * baasbox.com could be used instead (open-source)
         * Admin Area
            * The server will provide an interface to control the app
            * e.g., the current 'Hot Topics', blocking users, reading statistics, im/exporting the current corpus
   * Status Report(RH): What will I do?
      * Start implementing a prototype for the different game modes
      * Experimenting / refining the game-modes to improve the game mechanics and the validation
   * Status Report(RH): What's in your way?
      * Although I used to be a fan of HTML5 a few years ago, switching back to JavaScript is kind of difficult
      * @discuss(CS): Does the university provide servers I could install a Java based server process ('baasbox' backend-as-a-service) on?
         * >> Probably yes.
      * @discuss(CS): Would the university be able to pay for the parse.com bills (Pricing: https://www.parse.com/plans)?
         * >> No, use open-source projects whenever possible.

---+++ 2014-10-07
   * Status Report (RH):
      * offline for vacation.
   
---+++ 2014-09-30
   * Status Report (RH):
      * continuing reading the papers


---+++ 2014-09-23
   * Status Report (RH):
      * continuing reading the papers
      * continuing adding papers of Serious Games and Argument Mining / Theory


---+++ 2014-09-16
   * Status Report (RH):
      * Started consuming papers
      * Had to prepare for a job interview

---+++ 2014-09-09
   * Status Report(RH): What have you done?
      * Tried to get in contact with Sandra Hardy (KOM, Serious Games), no response yet
      * Assembled some papers in the Gamification domain (with CS and IH, it will be easy to a valuable list of papers in the NLP domain)
      * Analyzed the visual design of duolingo: Fresh, green, vital, comic, flat, custom font, mascot, utterly beautiful animations! Generally a childish visual language, even tough it's being used by adults as well. They don't mention that the users are actually 'working' in any point in the app description. "Learn a language, for free!". 
      * Thought about what to do with the points in the game:
         * Making use of the smartphone space and let users unlock _wallpapers_, _ringtones_, other resources.
         * Feeding a _tamagotchi like animal_.
         * Providing _local high-scores_.
         * Unlocking _simple games_.
         * Providing _ridiculous / funny awards_, such as "Besserwisser"-Award.
         * Unlocking _privileges_, e.g., submitting articles + debate questions.
      * Thought about applying time constraints to the game concept to make it more fun:
         * varying the time-consuming process of argument production with small, lightweight, fast mini-games similar to "Dumb ways to die"?
         * you only have 60s seconds to compose a new argument (quality may suffer)? Or: Other took just ~32s to compose a new argument on this topic, what about you?
      * Found Readability, a class to extract an article content from a web page
      * Analyzed the Cappuccino framework ("ObjectiveJ": translates Objective C like code into JavaScript): Seems like a gorgeous technology, but is currently Desktop only
      * Checked out phonegap's plugin functionality: vivid community
      * Checked out ember.js, AngularJS (by Google, seems promising), backbone.js (Binding!). All used my major companies. Decision will probably depend on the IDE comfort.
   * Status Report(RH): What will you do?
      * Find more adequate "external rewards for reaching specified point thresholds": what to do with the collected points in the game?
      * How to apply gamification, the wrong way
      * Get the Serious Games appointment
   * Status Report(RH): What's in your way?
      * externally: my upcoming job interview
   * @discuss(CS): Thesis Structure and Related Work
   * @discuss(CS): Elaboration of Task Description
   * @info(CS): Thesis Workflow open items 
      * Contract (IVAN?)
         * Signed version was handed over to secretariat already on 2.9. --IH
      * Appointments for student talks (midterm and final)
      * Serious Games questions
      * List of grades
      * Task description
   * @todo(supervisors):
   * @todo(student):

---+++ 2014-09-02
   * Status Report(RH): What have you done?
      * captured the three ideas, that emerged from the discussions between of IH, CS, RH, in short presentations:
         * the 'Article Debate' approach: let users select text in articles of publishers and add their arguments pro or contra, with enhanced Gamification aspects
         * the 'How well do you know your friends' approach: guess who of your friends this argument originates from
         * the 'Based on a premise, can you guess the direction?' approach: guess if the author is pro or contra a certain topic, based on one provided premise only
      * initially tested existing, well known 'gamified' apps, such as Duolingo, Runstastic, Zombierun
      * searched for potential show-stoppers in the three game concepts
         * Bootstrapping: present in all approaches: we need an initial pool of debating questions, corresponding arguments, and existing users to make the game gun from the very first day of the launch _(Thoughts: As long as there won't come up a brilliant idea during the thesis how to let the users themselves create data before they start playing it, we probably will have to produce initial data on our own, manually. Idea: every user will have to produce ONE+ argument during a short intro tutorial before (s)he can start playing the game)_
         * Typing on Smartphones: Although there is a dictation feature in current smartphones OSs, it may be arduous to produce contents on a small, virtual keyboard _(Thoughts: a) the template will simplify the creation process. b) a Desktop browser version may help for those who really suffer. c) the OS dictation feature works quite well with simple texts (no numbers contained, etc.).)_
         * lack of engaging friends: the 'How well do you know your friends' idea highly depends on the fact that enough of your Social Media friends are also using the app _(Thoughts: Do not only guess your friends, but also guess properties of unknown authors, such as gender, age, home country. This will reduce the fun factor, but makes the concept robust against lack of user data)_
       * Idea (IH, CS) to merge the two 'guessing' game ideas into one single app: since both approaches share the same data models, combining the two will reduce the impact of the individual problems of the ideas. RH: Great idea to combine them, which is similar to the idea to also guess unknown author's properties. Combining all the concepts will introduce more variation in the game and, thus, entertain the user even more.
   * Status Report(RH): What will you do?
      * further elaborate risks of the current concept
      * check which and how educational apps have been promoted by Apple in their AppStore(s) recently
      * look up existing apps in this domain
      * elaborate research questions in all technical views of the whole concept to enhance the research value of the thesis
      * search for Backend-as-a-service services
      * search for cross-platform application frameworks
   * Status Report(RH): What's in your way?
   * @todo(student):
      * finally get a signed overview of my grades in the Prüfungsamt



-- Main.ChristianStab - 2014-09-08
   * [[%ATTACHURL%/Midterm_Talk.pdf][Midterm_Talk.pdf]]: Mid-term Talk Presentation (Raffael Hannemann)

%META:FILEATTACHMENT{name="Midterm_Talk.pdf" attachment="Midterm_Talk.pdf" attr="" comment="Mid-term Talk Presentation (Raffael Hannemann)" date="1420630613" path="Midterm Talk.pdf" size="1821714" user="hannemann" version="1"}%

%META:TOPICINFO{author="juschak" comment="save topic" date="1525776127" format="1.1" reprev="6" version="6"}%
%META:TOPICPARENT{name="StudentsList"}%
---++ 2018-05-08
   * extracted medical words from articles in wikipedia's category lists [[https://de.wikipedia.org/wiki/Kategorie:Krankheit][Krankheit]] and [[https://de.wikipedia.org/wiki/Kategorie:Krankheitssymptom][Krankheitssymptom]]
   * First attempt of finding medical terms in essays by matching them with occurrences in the created medical term lists

---++ 2018-04-30
   * extracted first word list from website netDoktor.de using Python library Scrapy
   * discussed what should be mentioned as related work in thesis: 5 (to 10) papers with large overlap in goal, task, methods
   * next steps: identify more medical terms using Wikipedia pages of terms currently in the list

---++ 2018-04-24
   * look at websites with German medical terms that Marcel found
   * discuss draft task description
   * idea: also use word embeddings to extend medical word lists
   * note: Marcel wants to hand in before start of October --> hard work required since this is one month less than usual for a Bachelor thesis
   * plan dates for mid-term presentation (10.7.) and final presentation (18.9.) 
   * TODO(!ClS): finalise Task Description
   * TODO(Marcel): start with creation of medical term lists


---++ 2018-04-19
   * discuss related papers 
   * TODO(!ClS): draft task description

---++ 2018-04-11
   * agreed on aim of thesis: automatically detect medical diagnosis (e.g. disease), medical test, and test results in texts --> unsupervised, there will only be a few documents for testing
   * talked about general expectations for thesis at UKP
   * discussed various possible dictionaries: UMLS, Wikipedia
   * either use various dictioniaries and dict extraction methdos and compare their usefulness
   * or go in the ML direction, i.e. train a classifier (on Medical word embeddings??) to also predict unknown medical words
   * Marcel will contribute to writing task description
      * TODO(!ClS): Send some examples of task description
   * programming language dependent on task
   * next steps: decide which direction to take, check possible dictionaries and data sources, draft task description



-- Main.ClaudiaSchulz - 2018-04-16
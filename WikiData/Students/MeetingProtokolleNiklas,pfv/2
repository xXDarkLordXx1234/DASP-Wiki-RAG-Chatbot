%META:TOPICINFO{author="NiklasJakob" date="1164202041" format="1.1" reprev="2" version="2"}%
%META:TOPICPARENT{name="NiklasJakob"}%
---+Meeting-Protokolle

---++06.11.2006, 15:30 Uhr

   * Format der Eingabedaten: Ziel ist es Texte von der UIMA Platform verarbeiten zu können. Dazu könnte den Algorithmen z.B. ein CAS Objekt zur Analyse übergeben werden. Dazu muss wahrscheinlich eine eigene Klasse zur Annotation geschrieben oder ein eigenes Token definiert werden.

   * Eingabeparameter: Der Threshold Wert zur Bestimmung der "Strong Chains" sollte bei beiden Algorithmen frei einstellbar sein. (Von den Autoren definiert sind "Strong Chains" alle diejenigen deren Wert um die zweifache Standardabweichung höher als der Mittelwert aller Chains ist)

   * Zugriff auf die Informationsquellen: Der Zugriff auf die Wikipedia, WordNet und GermaNet sollte eventuell über eine Dummy Klasse erfolgen, sodaß dies später auch über CAS geschehen kann.

   * Wikipedia API: Die wichtigsten Funktionen sind wahrscheinlich getCategories() und isDisambiguation() und für die Verwendung der Wikipedia als Informationsquelle elementar.

   * Evaluation: Es existieren Texte die manuell hinsichtlich lexikalischer Ketten ausgewertet wurden. Diese könnten bei der Evaluierung der Algorithmen verwendet werden. Zusätzlich könnte man empirisch die Qualität von automatisch extrahierten Ketten bewerten lassen.

   * Programmstruktur: Die Referenzimplementierung des Galley/McKeown Algorithmus wird von C++ nach Java portiert. Aus der Implementierung des Silber/McCoy Algorithmus müssen sämtliche Zugriffe auf das MMAX Eingabeformat entfernt und ersetzt werden.

<div class="foswikiAlert">WARNING: THIS TEXT WAS ADDED BY THE SYSTEM TO CORRECT A PROBABLE ERROR IN THE HISTORY OF THIS TOPIC.</div>

---++20.11.2006, 15:30 Uhr

   * IP-Vereinbarung: Zusätzlicher Vertrag wird zum nächsten Treffen unterzeichnet mitgebracht.

   * Eingabedaten: Das Konzept des CAS Objekts als Datenquelle wurde verfeinert und für gut befunden.

   * Programmstruktur: Zwecks Erweiterbarkeit und guter Struktur soll für die Algorithmen ein Java Interface ("LexicalChainExtractor"?) definiert werden. Ebenso soll für den Zugriff auf die Semantischen Netze ein Interface ("SemanticNet"?) definiert werden.

   * Eingabedaten: Es muss wahrscheinlich eine Klasse die UIMA implementiert definiert werden, welche den Input ersetzt.

   * Programmstruktur: Ein UML Diagramm der gesamten Anwendung wird erstellt welches bei fortschreitender Analyse des Zugriffs auf die Informationsquellen verfeinert wird.



-- Main.NiklasJakob - 22 Nov 2006
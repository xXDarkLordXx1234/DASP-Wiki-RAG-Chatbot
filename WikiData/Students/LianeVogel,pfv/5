%META:TOPICINFO{author="schiller" comment="" date="1541763861" format="1.1" reprev="5" version="5"}%
%META:TOPICPARENT{name="StudentsList"}%
---+++ 09.11.2018
*Current state*
   * Wikidata toolkit doesn't work properly with latest wikidata dump (always results in deleting most of the dump, leaving only a handful of triples)
   * Inference in Virtuoso is activated, there are some predefined inference rules and new ones can be defined
   * Setting up Virtuoso will be delayed until next week, when the VMServer is hopefully available
   * Most Entity Linkers so far do not allow to switch Knowledge Base and/or use SPAQRL endpoint for spotting entites
      * Most promising ones are [[https://github.com/dice-group/fox][FOX]], [[https://github.com/yahoo/FEL][FEL]], and [[https://github.com/dbpedia-spotlight/dbpedia-spotlight-model][DBPedia Spotlight]]
   * Deleting graphs from Virtuoso is possible if the correct URI was used when the knowledge base was imported

*Open questions/tasks*
   * Wikidata cleanup: instead of the jar-file of Wikidata Toolkit, use the code and build the tool
   * DBPedia cleanup: Follow the guide and cleanup DBPedia as well: language https://joernhees.de/blog/2014/11/10/setting-up-a-local-dbpedia-2014-mirror-with-virtuoso-7-1-0/
   * Download FOX and FEL, build, and check out results. Is it possible to make these EL work with other KBs?
   * Options to make EL work on several other KBs:
      * Take returned entities and build URIs to other KBs from them
      * Make use of sameAs-relations to get concepts of other KBs

*Backlog*
   * DBPedia Spotlight EL will be tested as soon as the VMServer is available and Virtuoso has a running DBPedia instance, as this is a prerequisite for the EL
   * WordNet RDF dump has a weird format and might require some preprocessing or proper SPARQL queries to give results as can be seen n the online wordnet search (finding synsets of a lemma, their hypernyms and other relations)

---+++ 02.11.2018
*Current state*
   * Wikidata cleanup tool doesn't seem to work properly -> in the worst case, we import the full Wikidata dump
   * Search for an Entity Linker is still in progress
   * Wikidata QIDs are not supported/consistend by all KBs and cannot be relied on (perhaps multiple Entity Linkers are needed)

*Open questions/tasks*
   * Wikidata cleanup: 
      * Most important is the filtering of the languages and blacklist properties (perhaps the multitude of blacklist properties is a problem)
      * Suggestions: 
         * test without blacklist properties
         * test without config-file
         * use only a small part of the Wikidata-dump (head -n1000 wikidata-dump.nt > wikidata-dump-fule.part.nt)
   * If VM Server is not available until Monday, we can set up Virtuoso w/ SPARQL Endpoint on Lisa with just Wikidata for now
   * For DBPedia, we should also only import english and german language https://joernhees.de/blog/2014/11/10/setting-up-a-local-dbpedia-2014-mirror-with-virtuoso-7-1-0/
   * We need to find an Entity Linker architecture + code that uses (or can be modified to use) a SPARQL Endpoint full text search
   * Activate inference setting for Virtuoso (are there other settings described in the master thesis by Daniil's former student?)
   * Is it possible to delete an imported RDF-graph from Virtuoso (how)?

---+++ 26.10.2018
*Current state*
   * Virtuoso running on local machine with SPARQL endpoint and [[https://wordnet-rdf.princeton.edu/about][WordNet 3.1]]
   * Full text search is working
   * Multiple knowledge graphs can be imported and simultaneously queried by defining Graph IRIs for each
   * Waiting for VMServer to be deployed

*Open questions/tasks*
   * Since Wikidata is quite large, we need to reduce its size for performant queries:
      * Tool to filter languages and properties, etc.: https://www.mediawiki.org/wiki/Wikidata_Toolkit/Client
      * Config-datei anlegen:
         * Only german and english
         * Only use properties that are not on the [[%ATTACHURLPATH%/property_blacklist.txt][blacklist]] (remove from [[https://github.com/maxlath/wikidata-cli/blob/master/docs/read_operations.md#wd-props][list of all properties]])
   * Investigate Entity Linkers until VMServer is available:
      * See agenda from 12.10.2018
      * Check which KBs support Wikipedia/Wikidata QIDs (on which the Entity Linker will be trained on)
      * Do we need separate Entity Linkers for KBs that do not support QIDs?


---+++ 19.10.2018
*Current state*
   * Virtuoso running on local machine with SPARQL endpoint and WordNet 3.1

*Open questions/tasks*
   * Is it possible to use other query languages (SQL, CIPHER, etc.)?
   * How to enable full text search? (https://github.com/dotnetrdf/dotnetrdf/wiki/UserGuide-Full-Text-Querying-With-SPARQL)
   * How is it possible to use multiple knowledge bases in one Virtuoso endpoint?
   * Provide detailed documentation for installation and configuration

---+++ 12.10.2018
*Organizational*
   * Sign contract, intellectual proprty statement, task descriptions
   * Mandatory meetings on Tuesdays at 11:30 in B002
   * Thesis template und Presentation template: https://wiki.ukp.informatik.tu-darmstadt.de/Students/InformationenFuerDiplomanden

*Proposed/Discussed next steps (Overview)*
   1 Work into Virtuoso (document all steps)
      2 Build a minimal working sample by  installing Virtuoso, adding e.g. WordNet (specs for virtuoso KB server: https://docs.google.com/document/d/17gru5AApGwa-F7_4gZ_adMjlmBUYviD6oynSgiz0gMM/edit)
      3 Add a SPARQL endpoint for WordNet/Virtuoso (check functionality by comparing it to official WordNet SPAQRL endpoint)
      4 Find out how to add multiple KBs with their own endpoints (is a combined endpoint possible?)
   2 Entity linker
      3 Find out which entity linkers can be used for the proposed KBs and how they work (is a SPAQRL endpoint sufficient?), e.g. from:
         *     Unsupervised Entity Linking with Abstract Meaning Representation, ACL16 
         *     CoType: Joint Typing of Entities and Relations with Knowledge Bases, WWW17 
         *     Fast and Space-Efficient Entity Linking in Queries, WSDM15 
         *     Tagme: on-the-fly annotation of short text fragments (by Wikipedia entities), CIKM10 
         *     Local and Global Algorithms for Disambiguation to Wikipedia (Wikifier), ACL11 
         *     DBpedia Spotlight, iSemantics13 
      4 Test entity linkers with Virtuoso endpoint







---+++ 21.09.2018
   * discuss proposal for task description

-- Main.BenjaminSchiller - 2018-10-12

%META:FILEATTACHMENT{name="property_blacklist.txt" attachment="property_blacklist.txt" attr="" comment="" date="1540557214" size="6370" user="schiller" version="1"}%

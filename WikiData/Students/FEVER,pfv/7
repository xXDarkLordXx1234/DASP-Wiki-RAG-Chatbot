%META:TOPICINFO{author="hanselowski" comment="reprev" date="1524819653" format="1.1" reprev="7" version="7"}%
%META:TOPICPARENT{name="StudentsList"}%
---++ Meeting: 26.04.2018:

   * Evaluation: [[http://fever.ai/task.html][FEVER webpage]]; [[https://github.com/sheffieldnlp/fever-scorer][example]]

   * TODOs: 
      * Evaluation metric for the task to be clarified: formal definition
      * Information retrieval: talk to Andreas, Richard, Chris, ... how this can be done?
      * Hao: 
         * Prepare dataset for sentence selection (a set of documents with annotated evidence and without)
         * Apply the implemented classifiers for stance detection for the task and compare to baseline performance
      * Zile: 
         * Clarify if we are allowed to use only the selected set of evidence for claim validation
         * Prepare dataset for claim validation (a set evidence for each claim containing )
         * Implement the pipeline the baseline pipeline and reproduce the results (once access to the server granted)
         * Apply the implemented classifiers for stance detection for the task and compare to baseline performance
         * Find out state of the art midels for SNLI and multiNLI (we could also use them)


---++ Important information about the task
   * Modules:
      * Information retrieval: We need to create an index for search using [[https://lucene.apache.org/][Lucene]]; [[https://github.com/lemire/IndexWikipedia][Creating Lucene index for Wikipedia dump]]
      * Evidence aggregation (consider as classification problem on sentence level): universal encoders (Facebook, Google), try to train our own sentence encoder, claim validation models, conditional encoders, SNLI multiNLI models ....
         * Considering as ranking problem Can be later considered as content extraction or contextual ranking problem in order to facilitate the collection of linked evidence
         * Considering as content selection: Simply generate conditional sequences, Beam search, Monte Carlo Tree search, ILP, Decoder LSTM condition on claim select the most likely sentence, ... 
         * Considering as ranking problem: ...
      * Claim validation (classification problem): basically the same classifier as for the evidence aggregation
      * Joint learning of sentence aggregation and claim validation: Memory networks, ILP, reinforcement learning

   * Models to be tried out:
      * Google universal encoder
      * Facebook InferSent
      * Separate encoder for the sentence and the claim
      * Conditional encoding
      * Attention based models
      * ...
      
   * Joint model:
      * One hop reasoning: Sentence encoder, conditional decoding LSTM (generates a sequence of evidence), inference module (predicts a label for the claim on the basis of the evidence sequence),  joint loss function for evidence selection and label prediction, (attention for selection, keys values to be considered)
      * Three hop reasoning: Same as above but we have additionally three options to choose from, additional selection module? 


   * Miscellaneous:
      * Documents: The document collection is whole Wikipedia (5.4M pages)
      * Evidence: "in 31.75% of the claims more than one sentence was considered appropriate evidence. Claims require composition of evidence from multiple sentences in 16.82% of cases. Furthermore, in 12.15% of the claims, this evidence was taken from multiple pages."
      




-- Main.AndreasHanselowski - 2018-04-24